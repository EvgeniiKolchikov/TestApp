@page "/user"
@page "/user/{id:int}"
@using WebApi.Models.ViewModels
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
<h2>Пользователи</h2>
<h3>@_title</h3>
<div class="row">
    <div class="col-sm-4">
        <EditForm Model="@_userViewModel" OnValidSubmit="() => HandleSubmit(_userViewModel)">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="mb-3">
                <label class="form-label">Имя:</label>
                <InputText @bind-Value="_userViewModel.Name" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label class="form-label">Фамилия:</label>
                <InputText @bind-Value="_userViewModel.Surname" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label class="form-label">Отчество:</label>
                <InputText @bind-Value="_userViewModel.PatronymicName" class="form-control"></InputText>
            </div>
            <button class="btn-info" type="submit">Добавить</button>
            <button class="btn-warning" @onclick="Back">Отмена</button>
        </EditForm>
    </div>
</div>


@code{
    
    [Parameter]
    public int? Id { get; set; }

    private string _title = "";
    private UserViewModel? _userViewModel  = new()
    {
        Name = string.Empty,
        Surname = string.Empty,
        PatronymicName = string.Empty
    };

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            try
            {
                _userViewModel = await HttpClient.GetFromJsonAsync<UserViewModel>($"api/user/{Id}");
                _title = $"{_userViewModel.Name} {_userViewModel.Surname} {_userViewModel.PatronymicName}";
            }
            catch (Exception)
            {
                NavigationManager.NavigateTo("/error");
            }
        }
        else
        {
            _title = "Новый пользователь";
        }
    }

    private async Task HandleSubmit(UserViewModel userViewModel)
    {
        if (userViewModel.Id == 0)
        {
            await HttpClient.PostAsJsonAsync("api/user", userViewModel);
            Back();
        }
        else
        {
            await HttpClient.PutAsJsonAsync("api/user", userViewModel);
            Back();
        }
    }
    
    private void Back()
    {
        NavigationManager.NavigateTo("/");
    }

}